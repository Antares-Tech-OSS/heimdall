#!/usr/bin/env node

require('app-module-path').addPath(__dirname + '/../../../');

var minimist      = require('minimist');
var mongoose      = require('apps/auth/common/db/mongoose');
var emitter       = mongoose.emitter;
var colors        = require('colors');
var path          = require('path');
var crypto        = require('crypto');
var model         = require('apps/auth/models/clients');
var client_schema = require('apps/auth/common/db/client-schema');
var locals        = require('common/kv');
var promise       = require('bluebird');

var mongo_url     = 'mongodb://localhost:27017/heimdallr?maxPoolSize=10';
var args          = minimist (process.argv.slice(2));

var params  = {};

function usage () {
	console.log (`Usage : ${path.basename (process.argv[1])} [ options ]`);
	console.log ('        --by-name   (OPTIONAL) : by name of the client application');
	console.log ('        --by-cid    (OPTIONAL) : by client id');
	console.log ('        --by-secret (OPTIONAL) : by client secret');

	process.exit (1);
}

emitter.on ('heimdallr.mongo.connected', function () {
	var what, val;

	if (args['by-name']) {
		what = 'display_name';
		val  = args['by-name'];
	}
	else if(args['by-cid']) {
		what = 'cid';
		val  = args['by-cid'];
	}
	else if (args['by-secret']) {
		what = 'secret';
		val  = args['by-secret'];
	}
	
	model.get_multiple (what, val, function (err, client) {
		if (err) {
			if (err.message)
				console.log (`${colors.red("error")} : ${err.message}`);
			else
				console.log (`${colors.red("error")} : ${err}`);

			process.exit (1);
		}

		console.log (JSON.stringify (client, null, 2));
		process.exit (0);
	});
});
